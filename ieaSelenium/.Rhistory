### -----------------------------
### exploring twitter's apis
### simon munzert
### -----------------------------
## goals ------------------------
# explore Twitter's APIs
## packages ---------------------
library(ROAuth)
library(RCurl)
library(twitteR)
library(streamR)
wd <- ("./twitterApis")
dir.create(wd)
setwd(wd)
Sys.getenv("twitter_api_key")
?setup_twitter_oauth
# negotiate credentials
api_key <- Sys.getenv("twitter_api_key")
api_secret <- Sys.getenv("twitter_api_secret")
access_token <- Sys.getenv("twitter_access_token")
access_token_secret <- Sys.getenv("twitter_access_token_secret")
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
tweets <- searchTwitter(searchString = "Pegida", n=25, lang=NULL, since=NULL, until=NULL, locale=NULL, geocode=NULL, sinceID=NULL, retryOnRateLimit=120)
tweets_df <- twListToDF(tweets)
head(tweets_df)
# get information about users
user <- getUser("RDataCollection")
user$name
user$lastStatus
user$followersCount
user$statusesCount
user_followers <- user$getFollowers()
user_friends <- user$getFriends()
user_timeline <- userTimeline(user, n=20)
timeline_df <- twListToDF(user_timeline)
# check rate limits
getCurRateLimitInfo()
load("twitter_auth.RData")
filterStream("tweets_stream.json", track = c("Trump"), timeout = 10, oauth = twitCred)
tweets <- parseTweets("tweets_stream.json", simplify = TRUE)
names(tweets)
cat(tweets$text[1])
### -----------------------------
### scrape data from IEA website
### simon munzert
### -----------------------------
## goals ------------------------
#  fetch policy data from IEA database
## tasks ------------------------
# get Selenium running
# inspect HTML form on http://www.iea.org/policiesandmeasures/renewableenergy/
# access page with RSelenium
# download data output
# import data into R
# data tidying
## packages ---------------------
library(RSelenium)
library(rvest)
## directory --------------------
wd <- ("./ieaSelenium")
dir.create(wd)
setwd(wd)
url <- "http://www.iea.org/policiesandmeasures/renewableenergy/"
browseURL(url)
content <- read_html(url)
checkForServer()
startServer()
remDr <- remoteDriver(remoteServerAddr = "localhost", port = 4444, browserName = "firefox")
remDr$open()
remDr$open()
remDr$open()
# start server
startServer()
# connect to server
remDr <- remoteDriver(remoteServerAddr = "localhost", port = 4444, browserName = "firefox")
# open connection; Firefox window should pop up
remDr$open()
remDr$navigate(url)
# open regions menu
css <- '.middleContainer > div:nth-child(1) > form:nth-child(6) > div:nth-child(1) > div:nth-child(1) > ul:nth-child(2) > li:nth-child(1) > span:nth-child(1)'
regionsElem <- remDr$findElement(using = 'css', value = css)
openRegions <- regionsElem$clickElement() # click on button
css <- 'div.form-container:nth-child(2) > ul:nth-child(2) > li:nth-child(1) > span:nth-child(1)'
regionsElem <- remDr$findElement(using = 'css', value = css)
openRegions <- regionsElem$clickElement() # click on button
css <- 'div.form-container:nth-child(2) > ul:nth-child(2) > li:nth-child(1) > ul:nth-child(3) > li:nth-child(5) > label:nth-child(1) > input:nth-child(1)'
euElem <- remDr$findElement(using = 'css', value = css)
selectEU <- euElem$clickElement() # click on button
# set time frame
css <- 'div.form-container:nth-child(6) > select:nth-child(2)'
fromDrop <- remDr$findElement(using = 'css', value = css)
clickFrom <- fromDrop$clickElement() # click on drop-down menu
writeFrom <- fromDrop$sendKeysToElement(list("2000")) # enter start year
css <- 'div.form-container:nth-child(6) > select:nth-child(3)'
toDrop <- remDr$findElement(using = 'css', value = css)
clickTo <- toDrop$clickElement() # click on drop-down menu
writeTo <- toDrop$sendKeysToElement(list("2010")) # enter end year
css <- '#main > div:nth-child(1) > form:nth-child(4) > button:nth-child(14)'
searchElem <- remDr$findElement(using = 'css', value = css)
resultsPage <- searchElem$clickElement() # click on button
output <- remDr$getPageSource(header = TRUE)
write(output[[1]], file = "iea-renewables.html")
remDr$closeServer()
# parse index table
content <- html("iea-renewables.html", encoding = "utf8")
content <- read_html("iea-renewables.html", encoding = "utf8")
tabs <- html_table(content, fill = TRUE)
tab <- head(tabs[[4]])
tabs
class(tabs)
tabs[[1]]
tabs[[2]]
tab <- head(tabs[[1]])
head(tab)
names(tab) <- c("title", "country", "year", "status", "type", "target")
head(tab)
View(tab)
source("rselenium-2048.r") # by Mark T. Patterson
dir()
source("rselenium-2048.r") # by Mark T. Patterson
setwd("../")
dir()
setwd("/Users/simon/GitHub/rscrapingSSDL2016")
setwd("./ieaSelenium")
source("rselenium-2048.r") # by Mark T. Patterson
source("rselenium-2048.r") # by Mark T. Patterson
source("rselenium-2048.r") # by Mark T. Patterson
source("rselenium-2048.r") # by Mark T. Patterson
grand.play()
